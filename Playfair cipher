import string

def generate_playfair_matrix(key):
    key = key.upper().replace("J", "I")
    key += string.ascii_uppercase
    key = "".join(dict.fromkeys(key))
    
    matrix = []
    for i in range(5):
        matrix.append(list(key[i*5:(i+1)*5]))
    
    return matrix

def get_char_position(matrix, char):
    for i in range(5):
        for j in range(5):
            if matrix[i][j] == char:
                return i, j

def encrypt_playfair(plain_text, key):
    matrix = generate_playfair_matrix(key)
    plain_text = plain_text.upper().replace("J", "I")
    
    cipher_text = ""
    i = 0
    while i < len(plain_text):
        char1 = plain_text[i]
        char2 = ""
        
        if i < len(plain_text) - 1:
            char2 = plain_text[i + 1]
        
        if char1 == char2:
            char2 = "X"
            i -= 1
        elif char2 == "":
            char2 = "X"
        
        row1, col1 = get_char_position(matrix, char1)
        row2, col2 = get_char_position(matrix, char2)
        
        if row1 == row2:
            cipher_text += matrix[row1][(col1 + 1) % 5]
            cipher_text += matrix[row2][(col2 + 1) % 5]
        elif col1 == col2:
            cipher_text += matrix[(row1 + 1) % 5][col1]
            cipher_text += matrix[(row2 + 1) % 5][col2]
        else:
            cipher_text += matrix[row1][col2]
            cipher_text += matrix[row2][col1]
        
        i += 2
    
    return cipher_text

key = input("Podaj klucz: ")
plain_text = input("Podaj tekst jawny: ")

cipher_text = encrypt_playfair(plain_text, key)
print("Szyfrogram: ", cipher_text)
